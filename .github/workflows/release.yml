name: Build Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'Packages/*/package.json'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.variables.outputs.valid == 'true' && steps.tag.outputs.exists == 'false' }}
      version: ${{ steps.package.outputs.version }}
      name: ${{ steps.variables.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Metadata
        id: variables
        run: |
          if [ ! -f "${{ github.workspace }}/metadata.json" ]; then
            echo "valid=false" >> $GITHUB_OUTPUT;
            exit 0
          fi

          export PACKAGE_NAME=$(jq -r '.name' "${{ github.workspace }}/metadata.json")
          if [ "$PACKAGE_NAME" = "null" ]; then
            echo "valid=false" >> $GITHUB_OUTPUT;
            exit 0
          fi

          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT;
          echo "valid=true" >> $GITHUB_OUTPUT;

      - name: Load Package
        if: steps.variables.outputs.valid == 'true'
        id: package
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with:
            file_path: "Packages/${{ steps.variables.outputs.name }}/package.json"

      - name: Tag Exist Check
        if: steps.variables.outputs.valid == 'true'
        id: tag
        uses: action-pack/tag-exists@v1
        with:
          tag: ${{ steps.package.outputs.version }}

  build:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.build == 'true'
    permissions:
      contents: write
    env:
      ZIP_FILE: ${{ needs.check.outputs.name }}-${{ needs.check.outputs.version }}.zip
      UNITY_PACKAGE: ${{ needs.check.outputs.name }}-${{ needs.check.outputs.version }}.unitypackage
      VERSION: ${{ needs.check.outputs.version }}
      PACKAGE_PATH: Packages/${{ needs.check.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Package Zip
        working-directory: "${{ env.PACKAGE_PATH }}"
        run: zip -r "${{ github.workspace }}/${{ env.ZIP_FILE }}" .

      - name: Track Package Meta Files
        run: find "${{ env.PACKAGE_PATH }}/" -name \*.meta >> metaList

      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@cfcd3cf0391a5ef1306342794866a9897c32af0b
        with:
          package-path: ${{ env.UNITY_PACKAGE }}
          include-files: metaList

      - name: Make Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(env.VERSION, 'alpha') || contains(env.VERSION, 'beta') || contains(env.VERSION, 'rc') }}
          tag_name: ${{ env.VERSION }}
          files: |
            ${{ env.ZIP_FILE }}
            ${{ env.UNITY_PACKAGE }}
            ${{ env.PACKAGE_PATH }}/package.json

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.VPM_DISPATCH_TOKEN }}
          repository: ${{ vars.LISTING_REPOSITORY }}
          event-type: deploy